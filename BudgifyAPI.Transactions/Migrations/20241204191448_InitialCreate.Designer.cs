// <auto-generated />
using System;
using BudgifyAPI.Transactions.Framework.EntityFramework.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BudgifyAPI.Transactions.Migrations
{
    [DbContext(typeof(TransactionsContext))]
    [Migration("20241204191448_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "uuid-ossp");
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BudgifyAPI.Transactions.Framework.EntityFramework.Models.Category", b =>
                {
                    b.Property<Guid>("IdCategory")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id_category")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<Guid?>("IdUser")
                        .HasColumnType("uuid")
                        .HasColumnName("id_user");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("name");

                    b.HasKey("IdCategory")
                        .HasName("category_pkey");

                    b.ToTable("category", (string)null);
                });

            modelBuilder.Entity("BudgifyAPI.Transactions.Framework.EntityFramework.Models.Reocurring", b =>
                {
                    b.Property<Guid>("IdReocurring")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id_reocurring")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<float>("Amount")
                        .HasColumnType("real")
                        .HasColumnName("amount");

                    b.Property<int?>("DayOfWeek")
                        .HasColumnType("integer")
                        .HasColumnName("day_of_week");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<Guid?>("IdCategory")
                        .HasColumnType("uuid")
                        .HasColumnName("id_category");

                    b.Property<Guid?>("IdSubcategory")
                        .HasColumnType("uuid")
                        .HasColumnName("id_subcategory");

                    b.Property<Guid>("IdWallet")
                        .HasColumnType("uuid")
                        .HasColumnName("id_wallet");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true)
                        .HasColumnName("is_active");

                    b.Property<bool>("IsMonthly")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_monthly");

                    b.Property<bool>("IsWeekly")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_weekly");

                    b.Property<bool>("IsYearly")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_yearly");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date")
                        .HasColumnName("start_date");

                    b.HasKey("IdReocurring")
                        .HasName("reocurring_pkey");

                    b.HasIndex("IdCategory");

                    b.HasIndex("IdSubcategory");

                    b.ToTable("reocurring", (string)null);
                });

            modelBuilder.Entity("BudgifyAPI.Transactions.Framework.EntityFramework.Models.Subcategory", b =>
                {
                    b.Property<Guid>("IdSubcategory")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id_subcategory")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<Guid>("IdCategory")
                        .HasColumnType("uuid")
                        .HasColumnName("id_category");

                    b.Property<Guid?>("IdUser")
                        .HasColumnType("uuid")
                        .HasColumnName("id_user");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("name");

                    b.HasKey("IdSubcategory")
                        .HasName("subcategory_pkey");

                    b.HasIndex("IdCategory");

                    b.ToTable("subcategory", (string)null);
                });

            modelBuilder.Entity("BudgifyAPI.Transactions.Framework.EntityFramework.Models.Transaction", b =>
                {
                    b.Property<Guid>("IdTransaction")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id_transaction")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<float>("Amount")
                        .HasColumnType("real")
                        .HasColumnName("amount");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp(6) without time zone")
                        .HasColumnName("date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<Guid?>("IdCategory")
                        .HasColumnType("uuid")
                        .HasColumnName("id_category");

                    b.Property<Guid?>("IdReocurring")
                        .HasColumnType("uuid")
                        .HasColumnName("id_reocurring");

                    b.Property<Guid?>("IdSubcategory")
                        .HasColumnType("uuid")
                        .HasColumnName("id_subcategory");

                    b.Property<Guid?>("IdTransactionGroup")
                        .HasColumnType("uuid")
                        .HasColumnName("id_transaction_group");

                    b.Property<Guid>("IdWallet")
                        .HasColumnType("uuid")
                        .HasColumnName("id_wallet");

                    b.Property<bool>("IsPlanned")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_planned");

                    b.Property<float?>("Latitude")
                        .HasColumnType("real")
                        .HasColumnName("latitude");

                    b.Property<float?>("Longitue")
                        .HasColumnType("real")
                        .HasColumnName("longitue");

                    b.HasKey("IdTransaction")
                        .HasName("transactions_pkey");

                    b.HasIndex("IdCategory");

                    b.HasIndex("IdReocurring");

                    b.HasIndex("IdSubcategory");

                    b.HasIndex("IdTransactionGroup");

                    b.ToTable("transactions", (string)null);
                });

            modelBuilder.Entity("BudgifyAPI.Transactions.Framework.EntityFramework.Models.TransactionGroup", b =>
                {
                    b.Property<Guid>("IdTransactionGroup")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id_transaction_group")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("timestamp(6) without time zone")
                        .HasColumnName("end_date");

                    b.Property<float>("PlannedAmount")
                        .HasColumnType("real")
                        .HasColumnName("planned_amount");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp(6) without time zone")
                        .HasColumnName("start_date");

                    b.HasKey("IdTransactionGroup")
                        .HasName("transaction_group_pkey");

                    b.ToTable("transaction_group", (string)null);
                });

            modelBuilder.Entity("BudgifyAPI.Transactions.Framework.EntityFramework.Models.Reocurring", b =>
                {
                    b.HasOne("BudgifyAPI.Transactions.Framework.EntityFramework.Models.Category", "IdCategoryNavigation")
                        .WithMany("Reocurrings")
                        .HasForeignKey("IdCategory")
                        .HasConstraintName("FKCategory");

                    b.HasOne("BudgifyAPI.Transactions.Framework.EntityFramework.Models.Subcategory", "IdSubcategoryNavigation")
                        .WithMany("Reocurrings")
                        .HasForeignKey("IdSubcategory")
                        .HasConstraintName("FKSubcategory");

                    b.Navigation("IdCategoryNavigation");

                    b.Navigation("IdSubcategoryNavigation");
                });

            modelBuilder.Entity("BudgifyAPI.Transactions.Framework.EntityFramework.Models.Subcategory", b =>
                {
                    b.HasOne("BudgifyAPI.Transactions.Framework.EntityFramework.Models.Category", "IdCategoryNavigation")
                        .WithMany("Subcategories")
                        .HasForeignKey("IdCategory")
                        .IsRequired()
                        .HasConstraintName("FKCategory");

                    b.Navigation("IdCategoryNavigation");
                });

            modelBuilder.Entity("BudgifyAPI.Transactions.Framework.EntityFramework.Models.Transaction", b =>
                {
                    b.HasOne("BudgifyAPI.Transactions.Framework.EntityFramework.Models.Category", "IdCategoryNavigation")
                        .WithMany("Transactions")
                        .HasForeignKey("IdCategory")
                        .HasConstraintName("FkCategory");

                    b.HasOne("BudgifyAPI.Transactions.Framework.EntityFramework.Models.Reocurring", "IdReocurringNavigation")
                        .WithMany("Transactions")
                        .HasForeignKey("IdReocurring")
                        .HasConstraintName("FKReocurring");

                    b.HasOne("BudgifyAPI.Transactions.Framework.EntityFramework.Models.Subcategory", "IdSubcategoryNavigation")
                        .WithMany("Transactions")
                        .HasForeignKey("IdSubcategory")
                        .HasConstraintName("FKSubcategory");

                    b.HasOne("BudgifyAPI.Transactions.Framework.EntityFramework.Models.TransactionGroup", "IdTransactionGroupNavigation")
                        .WithMany("Transactions")
                        .HasForeignKey("IdTransactionGroup")
                        .HasConstraintName("FKTransactiongroup");

                    b.Navigation("IdCategoryNavigation");

                    b.Navigation("IdReocurringNavigation");

                    b.Navigation("IdSubcategoryNavigation");

                    b.Navigation("IdTransactionGroupNavigation");
                });

            modelBuilder.Entity("BudgifyAPI.Transactions.Framework.EntityFramework.Models.Category", b =>
                {
                    b.Navigation("Reocurrings");

                    b.Navigation("Subcategories");

                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("BudgifyAPI.Transactions.Framework.EntityFramework.Models.Reocurring", b =>
                {
                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("BudgifyAPI.Transactions.Framework.EntityFramework.Models.Subcategory", b =>
                {
                    b.Navigation("Reocurrings");

                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("BudgifyAPI.Transactions.Framework.EntityFramework.Models.TransactionGroup", b =>
                {
                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
